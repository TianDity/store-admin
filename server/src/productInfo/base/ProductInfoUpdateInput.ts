/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsNumber,
  IsString,
  ValidateNested,
  IsDate,
} from "class-validator";
import { BrandInfoWhereUniqueInput } from "../../brandInfo/base/BrandInfoWhereUniqueInput";
import { Type } from "class-transformer";
import { ProductCategoryWhereUniqueInput } from "../../productCategory/base/ProductCategoryWhereUniqueInput";
import { ProductPicInfoUpdateManyWithoutProductInfosInput } from "./ProductPicInfoUpdateManyWithoutProductInfosInput";
import { SupplierInfoWhereUniqueInput } from "../../supplierInfo/base/SupplierInfoWhereUniqueInput";
@InputType()
class ProductInfoUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  auditStatus?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  averageCost?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  barCode?: string | null;

  @ApiProperty({
    required: false,
    type: () => BrandInfoWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BrandInfoWhereUniqueInput)
  @IsOptional()
  @Field(() => BrandInfoWhereUniqueInput, {
    nullable: true,
  })
  brandId?: BrandInfoWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  descript?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductCategoryWhereUniqueInput, {
    nullable: true,
  })
  oneCategoryId?: ProductCategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductPicInfoUpdateManyWithoutProductInfosInput,
  })
  @ValidateNested()
  @Type(() => ProductPicInfoUpdateManyWithoutProductInfosInput)
  @IsOptional()
  @Field(() => ProductPicInfoUpdateManyWithoutProductInfosInput, {
    nullable: true,
  })
  picInfoProductId?: ProductPicInfoUpdateManyWithoutProductInfosInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  productCore?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  productionDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  productKeywords?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  productName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  productSubtitle?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  publishStatus?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  purchasePrice?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  qrCode?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  shelfLife?: number | null;

  @ApiProperty({
    required: false,
    type: () => SupplierInfoWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SupplierInfoWhereUniqueInput)
  @IsOptional()
  @Field(() => SupplierInfoWhereUniqueInput, {
    nullable: true,
  })
  supplierId?: SupplierInfoWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductCategoryWhereUniqueInput, {
    nullable: true,
  })
  threeCategoryId?: ProductCategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductCategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductCategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductCategoryWhereUniqueInput, {
    nullable: true,
  })
  twoCategoryId?: ProductCategoryWhereUniqueInput | null;
}
export { ProductInfoUpdateInput };
