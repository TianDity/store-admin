/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { EnumProductCategoryCategoryStatus } from "./EnumProductCategoryCategoryStatus";
import { StringFilter } from "../../util/StringFilter";
import { ProductInfoListRelationFilter } from "../../productInfo/base/ProductInfoListRelationFilter";
@InputType()
class ProductCategoryWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  categoryCode?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  categoryLevel?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  categoryName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumProductCategoryCategoryStatus,
  })
  @IsEnum(EnumProductCategoryCategoryStatus)
  @IsOptional()
  @Field(() => EnumProductCategoryCategoryStatus, {
    nullable: true,
  })
  categoryStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  parentId?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ProductInfoListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductInfoListRelationFilter)
  @IsOptional()
  @Field(() => ProductInfoListRelationFilter, {
    nullable: true,
  })
  productOneCategoryId?: ProductInfoListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductInfoListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductInfoListRelationFilter)
  @IsOptional()
  @Field(() => ProductInfoListRelationFilter, {
    nullable: true,
  })
  productThreeCategoryId?: ProductInfoListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductInfoListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductInfoListRelationFilter)
  @IsOptional()
  @Field(() => ProductInfoListRelationFilter, {
    nullable: true,
  })
  productTwoCategoryId?: ProductInfoListRelationFilter;
}
export { ProductCategoryWhereInput };
